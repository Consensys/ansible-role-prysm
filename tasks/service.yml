---

- name: Check standalone validater systemd file exist
  stat:
    path: "{{ prysm_validator_service_file }}"
  register: prysm_standalone_validator_file_stat

# Configure and start monolith service
- name: Configure monolith
  block:

    # Stop standalone validator and beacon before configuring monolith
    # Running two validators result in penalty
    - name: Stop standalone validator service
      systemd:
        name: "{{ prysm_validator_service_name }}"
        state: stopped
        enabled: no
      become: true
      when: "prysm_standalone_validator_file_stat.stat.exists | bool"

    - name: Stop standalone beacon service
      systemd:
        name: "{{ prysm_beacon_service_name }}"
        state: stopped
      become: true
      when: "prysm_standalone_validator_file_stat.stat.exists | bool"
      register: stop_standalone_beacon

    - name: Set updated optionally to trigger a systemd restart at the end
      set_fact:
        prysm_state_updates: "{{ prysm_state_updates + ['teku.service_stopped'] }}"
      when: "stop_standalone_beacon is changed"

    - name: Remove standalone validator systemd file
      file:
        path: "{{ prysm_validator_service_file }}"
        state: absent
      become: true

    - name: Create Teku monolith systemd service
      template:
        src: "{{ prysm_systemd_template }}"
        dest: "{{ prysm_monolith_service_file }}"
        owner: "root"
        group: "root"
      become: true
      when:
        - "prysm_managed_service | bool"
      register: systemd_file

    - name: Set updated optionally to trigger a systemd restart at the end
      set_fact:
        prysm_state_updates: "{{ prysm_state_updates + ['teku.systemd_file'] }}"
      when: "systemd_file is changed"

    - name: Reload systemd to reread configs
      systemd:
        daemon_reload: yes
      become: true
      when: systemd_file is changed

    - name: Enable and start Teku service - monolith
      systemd:
        name: "{{ prysm_monolith_service_name }}"
        state: 'started'
        enabled: true
      become: true
      register: start_prysm_monolith
      when:
        - "prysm_managed_service | bool"

    - name: Restart Teku service - monolith
      systemd:
        name: "{{ prysm_monolith_service_name }}"
        state: "{{ prysm_systemd_state }}"
      become: true
      when:
        - "not start_prysm_monolith.changed"
        - "prysm_state_updates|length > 0"
        - "prysm_managed_service | bool"

  when:
    - "ansible_os_family != 'Darwin'"
    - "not prysm_standalone_validator | bool"
    - "prysm_beacon_enabled | bool"


# Configure and start standalone services
- name: Configure standalone validator
  block:

    - name: Check teku systemd file exist
      stat:
        path: "{{ prysm_monolith_service_file }}"
      register: prysm_monolith_file_stat

    - name: Stop monolith service
      systemd:
        name: "{{ prysm_monolith_service_name }}"
        state: stopped
      become: true
      when:
        - "not prysm_standalone_validator_file_stat.stat.exists | bool"
        - "prysm_monolith_file_stat.stat.exists | bool"

    - name: Remove monolith systemd file
      file:
        path: "{{ prysm_monolith_service_file }}"
        state: absent
      become: true
      when:
        - "not prysm_beacon_enabled | bool"

    - name: Remove beacon systemd file
      file:
        path: "{{ prysm_beacon_service_file }}"
        state: absent
      become: true
      when:
        - "not prysm_beacon_enabled | bool"

    - name: Create Teku beacon systemd service
      template:
        src: "{{ prysm_systemd_template }}"
        dest: "{{ prysm_beacon_service_file }}"
        owner: "root"
        group: "root"
      become: true
      when:
        - "prysm_managed_service | bool"
        - "prysm_beacon_enabled | bool"
      register: systemd_file_beacon
      vars:
        prysm_log_file: "{{ prysm_beacon_log_file }}"
        prysm_config_file: "{{ prysm_beacon_config_file }}"
        prysm_env_opts_internal: "{{ prysm_env_opts_beacon }}"
        prysm_cmdline_args_internal: "{{ prysm_cmdline_args_beacon }}"

    - name: Set updated optionally to trigger a systemd beacon restart at the end
      set_fact:
        prysm_state_updates_beacon: "{{ prysm_state_updates_beacon + ['teku.systemd'] }}"
      when: "systemd_file_beacon is changed"

    - name: Create Teku validator systemd service
      template:
        src: "{{ prysm_systemd_template }}"
        dest: "{{ prysm_validator_service_file }}"
        owner: "root"
        group: "root"
      become: true
      when:
        - "prysm_managed_service | bool"
      register: systemd_file_validator
      vars:
        prysm_sub_command: 'validator-client'
        prysm_log_file: "{{ prysm_validator_log_file }}"
        prysm_config_file: "{{ prysm_validator_config_file }}"
        prysm_env_opts_internal: "{{ prysm_env_opts_validator }}"
        prysm_cmdline_args_internal: "{{ prysm_cmdline_args_validator }}"

    - name: Set updated optionally to trigger a systemd validator restart at the end
      set_fact:
        prysm_state_updates_validator: "{{ prysm_state_updates_validator + ['teku.systemd'] }}"
      when: "systemd_file_validator is changed"

    - name: Reload systemd to reread configs
      systemd:
        daemon_reload: yes
      become: true
      when: "systemd_file_beacon is changed or systemd_file_validator is changed"

    - name: Enable and start Teku service - beacon
      systemd:
        name: "{{ prysm_beacon_service_name }}"
        state: 'started'
        enabled: true
      become: true
      register: start_prysm_standalone_beacon
      when:
        - "prysm_managed_service | bool"
        - "prysm_beacon_enabled | bool"

    - name: Restart Teku service - beacon
      systemd:
        name: "{{ prysm_beacon_service_name }}"
        state: "{{ prysm_systemd_state }}"
      become: true
      when:
        - "not start_prysm_standalone_beacon.changed"
        - "prysm_state_updates_beacon|length > 0"
        - "prysm_managed_service | bool"
        - "prysm_beacon_enabled | bool"

    - name: Enable and start Teku service - validator
      systemd:
        name: "{{ prysm_validator_service_name }}"
        state: 'started'
        enabled: true
      become: true
      register: start_prysm_standalone_validator
      when:
        - "prysm_managed_service | bool"

    - name: Restart Teku service - validator
      systemd:
        name: "{{ prysm_validator_service_name }}"
        state: "{{ prysm_systemd_state }}"
      become: true
      when:
        - "not start_prysm_standalone_validator.changed"
        - "prysm_state_updates_validator|length > 0"
        - "prysm_managed_service | bool"

  when:
    - "ansible_os_family != 'Darwin'"
    - "prysm_standalone_validator | bool"


# Darwin only
- name: Create Launchd service plist for Darwin
  template:
    src: "{{ prysm_launchd_template }}"
    dest: "{{ prysm_launchd_dir }}/tech.pegasyseng.teku.plist"
  become: true
  when:
    - "ansible_os_family == 'Darwin'"
    - "prysm_managed_service | bool"
